name: Terraform
scopeName: source.terraform
fileTypes: [tf]
uuid: dd7316da-3634-49ed-a8ea-d72e64bfb1a0

patterns:
- comment: Comments
  name: comment.line.terraform
  begin: '#|//'
  end: $\n?
  captures:
    '0': { name: punctuation.definition.comment.terraform }

- comment: Block comments
  name: comment.block.terraform
  begin: /\*
  end: \*/
  captures:
    '0': { name: punctuation.definition.comment.terraform }

- comment: Nested Blocks
  name: meta.block.terraform
  begin: "{"
  beginCaptures:
    '0': { name: punctuation.definition.block.terraform }
  end: "}"
  endCaptures:
    '0': { name: punctuation.definition.block.terraform }
  patterns:
  - include: "$self"

- comment: Quoted Block Labels
  match: '(")([^"]+)(")'
  captures:
    '1': { name: string.terraform punctuation.definition.string.begin.terraform }
    '2': { name: string.value.terraform }
    '3': { name: string.terraform punctuation.definition.string.end.terraform }

- comment: Attribute Definitions
  name: meta.attr.terraform
  begin: '(\w+)\s*(=)\s*'
  beginCaptures:
    '1': { name: variable.other.assignment.terraform }
    '2': { name: keyword.operator.terraform }
  end: '$'
  patterns:
  - include: '#heredoc'
  - include: '#parentheses'
  - include: '#functions'
  - include: '#constants'
  - include: '#numbers'
  - include: '#contructors'
  - include: '#operators'
  - include: '#words'
  - include: '#strings'

- include: '#keywords'

repository:
  keywords:
    patterns:
    - comment: Keywords
      match: '[-\w]+?\b'
      captures:
        '0': { name: keyword.other.terraform }

  constants:
    patterns:
    - comment: Language constants (true, false, null)
      name: constant.language.terraform
      match: \b(true|false|null)\b

  numbers:
    patterns:
    - comment: Numbers
      name: constant.numeric.terraform
      match: \b([0-9]+)(.[0-9]+)?([eE][0-9]+)?\b

  functions:
    patterns:
    - comment: Function Calls
      begin: ([-\w]+)(\()
      beginCaptures:
        '1': { name: keyword.other.function.inline.terraform }
        '2': { name: keyword.other.section.begin.terraform }
      end: (\))
      endCaptures:
        '1': { name: keyword.other.section.end.terraform }
      patterns:
      - include: '$self'

  words:
    patterns:
    - comment: Variables and Attribute Names
      match: '[-\w]+'
      captures:
        '0': { name: variable.other.terraform }

  heredoc:
    patterns:
    - comment: Heredoc Templates
      begin: (?>\s*<<(\w+))
      beginCaptures:
        '0': { name: punctuation.definition.string.begin.terraform }
        '1': { name: keyword.operator.heredoc.terraform }
      end: ^\s*\1$
      endCaptures:
        '0': { name: punctuation.definition.string.end.terraform keyword.operator.heredoc.terraform }
      patterns:
      - include: '#interpolation'

  strings:
    patterns:
    - comment: String Templates
      name: "string.quoted.double.terraform"
      begin: \"
      beginCaptures:
        '0': { name: string.terraform punctuation.definition.string.begin.terraform }
      end: \"
      endCaptures:
        '1': { name: string.terraform punctuation.definition.string.end.terraform }
      patterns:
      - include: '#interpolation'
      - include: '#templates'

  operators:
    patterns:
    - comment: Operators
      match: '(!=|==|>=|<=|&&|\|\||[-+*/%<>!?:])'
      captures:
        '0': { name: keyword.operator.terraform }

  parentheses:
    patterns:
    - comment: Parentheses
      begin: '\('
      beginCaptures:
        '0': { name: meta.brace.round.terraform }
      end: '\)'
      endCaptures:
        '0': { name: meta.brace.round.terraform }
      patterns:
      - include: '$self'

  contructors:
    patterns:
    - comment: Tuple Constructor
      begin: '\['
      beginCaptures:
        '0': { name: meta.brace.square.terraform }
      end: '\]'
      endCaptures:
        '0': { name: meta.brace.square.terraform }
      patterns:
      - match: '(for|in)'
        captures:
          '0': { name: keyword.control.terraform }
      - include: '$self'
    - comment: Object Constructor
      begin: '\{'
      beginCaptures:
        '0': { name: meta.brace.curly.terraform }
      end: '\}'
      endCaptures:
        '0': { name: meta.brace.curly.terraform }
      patterns:
      - match: '(for|in)'
        captures:
          '0': { name: keyword.control.terraform }
      - match: '(=>|\.\.\.)'
        captures:
          '0': { name: keyword.operator.terraform }
      - include: '$self'

  interpolation:
    patterns:
    - comment: Interpolation Sequences
      name: meta.interpolation.terraform
      begin: '[^\$]?(\$\{~?)'
      beginCaptures:
        '1': { name: entity.tag.embedded.start.terraform }
      end: '~?}'
      endCaptures:
        '0': { name: entity.tag.embedded.end.terraform }
      # patterns:
      # - include: '#constants'
      # - include: '#numbers'
      # - include: '#functions'
      # - include: '#operators'
      # - include: '#strings'

  templates:
    patterns:
    - comment: Control Sequences
      name: meta.control.terraform
      begin: '[^\%]?(\%\{~?)'
      beginCaptures:
        '1': { name: entity.tag.embedded.start.terraform }
      end: '~?}'
      endCaptures:
        '0': { name: entity.tag.embedded.end.terraform }
      # patterns:
      # - include: "#templateif"
      # - include: "#templatefor"
      # - include: "#templatesimplekw"

  # templateif:
  #   name: meta.templateif.terraform
  #   begin: '(if)\s*'
  #   beginCaptures:
  #     '1': { name: keyword.control.terraform }
  #   end: '(?=~?\})'
  #   patterns:
  #   - include: '#constants'
  #   - include: '#numbers'
  #   - include: '#functions'
  #   - include: '#contructors'
  #   - include: '#operators'

  # templatefor:
  #   name: meta.templatefor.terraform
  #   begin: '(for)\s*(\w+)\s*(,\s*(\w+)\s*)?(in)'
  #   beginCaptures:
  #     '1': { name: keyword.control.terraform }
  #     '2': { name: variable.other.terraform }
  #     '4': { name: variable.other.terraform }
  #     '5': { name: keyword.control.terraform }
  #   end: '(?=~?\})'
  #   patterns:
  #   - include: '#constants'
  #   - include: '#numbers'
  #   - include: '#functions'
  #   - include: '#contructors'
  #   - include: '#operators'

  # templatesimplekw:
  #   patterns:
  #   - match: (else|endif|endfor)
  #     captures:
  #       '0': { name: keyword.control.terraform }
